version: '3.8'

services:
  # MQTT Broker (Mosquitto)
  mosquitto:
    image: eclipse-mosquitto:latest
    ports:
      - "1883:1883"  # MQTT
      - "9001:9001"  # WebSockets
    volumes:
      - ./config/mosquitto/config:/mosquitto/config
      - ./config/mosquitto/data:/mosquitto/data
      - ./config/mosquitto/log:/mosquitto/log
    networks:
      - eyefleet_network

  # InfluxDB for time-series data
  influxdb:
    image: influxdb:2.7
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USERNAME:-admin}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD:-adminpassword}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG:-eyefleet}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET:-telemetry}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_TOKEN:-your-super-secret-auth-token}
    volumes:
      - influxdb_data:/var/lib/influxdb2
    networks:
      - eyefleet_network

  # Redis for Django Channels & Celery
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - eyefleet_network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-eyefleet}
      - POSTGRES_USER=${POSTGRES_USER:-eyefleet}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-eyefleetpass}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - eyefleet_network

  # Backend Django Application
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --no-input &&
             daphne -b 0.0.0.0 -p 8000 eyefleet.asgi:application"
    volumes:
      - ./backend:/app
      - static_files:/app/staticfiles
      - media_files:/app/mediafiles
    environment:
      - DEBUG=${DEBUG:-True}
      - SECRET_KEY=${DJANGO_SECRET_KEY:-your-secret-key}
      - DJANGO_SETTINGS_MODULE=eyefleet.settings
      - DATABASE_URL=postgres://${POSTGRES_USER:-eyefleet}:${POSTGRES_PASSWORD:-eyefleetpass}@postgres:5432/${POSTGRES_DB:-eyefleet}
      - REDIS_URL=redis://redis:6379/0
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN:-your-super-secret-auth-token}
      - INFLUXDB_ORG=${INFLUXDB_ORG:-eyefleet}
      - MQTT_BROKER_HOST=mosquitto
      - MQTT_BROKER_PORT=1883
    depends_on:
      - postgres
      - redis
      - influxdb
      - mosquitto
    networks:
      - eyefleet_network

  # Celery Worker
  celery_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A eyefleet worker -l INFO
    volumes:
      - ./backend:/app
    environment:
      - DJANGO_SETTINGS_MODULE=eyefleet.settings
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - backend
      - redis
    networks:
      - eyefleet_network

  # Celery Beat for Scheduled Tasks
  celery_beat:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: celery -A eyefleet beat -l INFO
    volumes:
      - ./backend:/app
    environment:
      - DJANGO_SETTINGS_MODULE=eyefleet.settings
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - backend
      - redis
    networks:
      - eyefleet_network

  # Frontend Next.js Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_WS_URL=ws://localhost:8000
    depends_on:
      - backend
    networks:
      - eyefleet_network
