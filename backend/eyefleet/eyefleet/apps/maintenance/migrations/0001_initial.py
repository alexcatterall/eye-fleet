# Generated by Django 4.2.16 on 2024-11-26 10:32

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='InspectionStatus',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'inspection_statuses',
            },
        ),
        migrations.CreateModel(
            name='InspectionType',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'inspection_types',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'inspection_locations',
            },
        ),
        migrations.CreateModel(
            name='MaintenancePriority',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'maintenance_priorities',
            },
        ),
        migrations.CreateModel(
            name='MaintenanceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='MaintenanceSchedulePriority',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name_plural': 'priorities',
                'db_table': 'schedule_priorities',
            },
        ),
        migrations.CreateModel(
            name='MaintenanceScheduleStatus',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name_plural': 'statuses',
                'db_table': 'schedule_statuses',
            },
        ),
        migrations.CreateModel(
            name='MaintenanceStatus',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'maintenance_statuses',
            },
        ),
        migrations.CreateModel(
            name='MaintenanceType',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'maintenance_types',
            },
        ),
        migrations.CreateModel(
            name='ScheduleType',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'schedule_types',
            },
        ),
        migrations.CreateModel(
            name='ServicePriority',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name_plural': 'service priorities',
                'db_table': 'service_priorities',
            },
        ),
        migrations.CreateModel(
            name='ServiceStatus',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name_plural': 'service statuses',
                'db_table': 'service_statuses',
            },
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'service_types',
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('registration_number', models.CharField(max_length=20)),
                ('manufacturer', models.CharField(blank=True, max_length=100, null=True)),
                ('model', models.CharField(blank=True, max_length=100, null=True)),
                ('driver', models.CharField(blank=True, max_length=100, null=True)),
                ('location', models.JSONField(blank=True, null=True)),
                ('fuel_level', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('on_trip', models.BooleanField(default=False)),
                ('mileage', models.CharField(blank=True, max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'vehicles',
            },
        ),
        migrations.CreateModel(
            name='VehicleAlertPriority',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'vehicle_alert_priorities',
            },
        ),
        migrations.CreateModel(
            name='VehicleAlertStatus',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'vehicle_alert_statuses',
            },
        ),
        migrations.CreateModel(
            name='VehicleAlertType',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'vehicle_alert_types',
            },
        ),
        migrations.CreateModel(
            name='VehicleReportFormat',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'vehicle_report_formats',
            },
        ),
        migrations.CreateModel(
            name='VehicleReportFrequency',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'vehicle_report_frequencies',
            },
        ),
        migrations.CreateModel(
            name='VehicleReportStatus',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'vehicle_report_statuses',
            },
        ),
        migrations.CreateModel(
            name='VehicleReportType',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('queries', models.JSONField(blank=True, default=list, null=True)),
                ('template', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'vehicle_report_types',
            },
        ),
        migrations.CreateModel(
            name='VehicleStatus',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'vehicle_statuses',
            },
        ),
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'vehicle_types',
            },
        ),
        migrations.CreateModel(
            name='VehicleReport',
            fields=[
                ('id', models.CharField(default='ROUTEREP-', max_length=20, primary_key=True, serialize=False)),
                ('report_name', models.CharField(max_length=255)),
                ('generated_at', models.DateTimeField()),
                ('date_range_start', models.DateField()),
                ('date_range_end', models.DateField()),
                ('file_size', models.CharField(max_length=20)),
                ('last_accessed', models.DateTimeField()),
                ('generated_by', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('tags', models.JSONField(default=list)),
                ('recipients', models.JSONField(default=list)),
                ('is_archived', models.BooleanField(default=False)),
                ('comments', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('format', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vehicles.vehiclereportformat')),
                ('frequency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vehicles.vehiclereportfrequency')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vehicles.vehiclereportstatus')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vehicles.vehicle')),
            ],
            options={
                'db_table': 'vehicle_reports',
                'ordering': ['-generated_at'],
            },
        ),
        migrations.CreateModel(
            name='VehicleAlert',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('vehicle', models.CharField(blank=True, max_length=50, null=True)),
                ('driver', models.CharField(blank=True, max_length=50, null=True)),
                ('location', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('impact', models.TextField()),
                ('assigned_to', models.CharField(blank=True, max_length=50, null=True)),
                ('resolution', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('priority', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vehicles.vehiclealertpriority')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vehicles.vehiclealertstatus')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vehicles.vehiclealerttype')),
            ],
            options={
                'db_table': 'vehicle_alerts',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddField(
            model_name='vehicle',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='vehicles.vehiclestatus'),
        ),
        migrations.AddField(
            model_name='vehicle',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='vehicles.vehicletype'),
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('vehicle', models.CharField(blank=True, max_length=100, null=True)),
                ('scheduled_date', models.DateTimeField()),
                ('completion_date', models.DateTimeField(blank=True, null=True)),
                ('mileage', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('description', models.TextField()),
                ('technician', models.CharField(max_length=100)),
                ('parts_used', models.JSONField(default=list)),
                ('labor_hours', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('notes', models.TextField(blank=True, null=True)),
                ('next_service_date', models.DateTimeField(blank=True, null=True)),
                ('next_service_mileage', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('attachments', models.JSONField(default=list)),
                ('organization', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('priority', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vehicles.servicepriority')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vehicles.servicestatus')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vehicles.servicetype')),
            ],
            options={
                'db_table': 'services',
                'ordering': ['-scheduled_date'],
                'indexes': [models.Index(fields=['vehicle', 'scheduled_date'], name='services_vehicle_1d8547_idx'), models.Index(fields=['type'], name='services_type_id_10ea9a_idx')],
            },
        ),
        migrations.CreateModel(
            name='MaintenanceSchedule',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('vehicle', models.CharField(blank=True, max_length=100, null=True)),
                ('mechanic', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField()),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('notes', models.TextField(blank=True, null=True)),
                ('attachments', models.JSONField(default=list)),
                ('organization', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vehicles.location')),
                ('priority', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vehicles.maintenanceschedulepriority')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vehicles.maintenanceschedulestatus')),
            ],
            options={
                'db_table': 'maintenance_schedules',
                'ordering': ['start_time'],
                'indexes': [models.Index(fields=['start_time'], name='maintenance_start_t_36a57a_idx'), models.Index(fields=['vehicle', 'start_time'], name='maintenance_vehicle_488f40_idx')],
            },
        ),
        migrations.CreateModel(
            name='Maintenance',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('reg_number', models.CharField(max_length=20)),
                ('scheduled_date', models.DateTimeField()),
                ('mechanic', models.CharField(blank=True, max_length=100, null=True)),
                ('estimated_duration', models.CharField(max_length=20)),
                ('estimated_cost', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('mileage', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('parts', models.JSONField(default=list)),
                ('notes', models.TextField(blank=True, null=True)),
                ('last_service', models.DateTimeField()),
                ('attachments', models.JSONField(default=list)),
                ('organization', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vehicles.location')),
                ('priority', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vehicles.maintenancepriority')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vehicles.maintenancestatus')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vehicles.maintenancetype')),
            ],
            options={
                'db_table': 'maintenance_records',
                'ordering': ['-scheduled_date'],
                'indexes': [models.Index(fields=['reg_number'], name='maintenance_reg_num_3a1aab_idx')],
            },
        ),
        migrations.CreateModel(
            name='Inspection',
            fields=[
                ('id', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField()),
                ('reg_number', models.CharField(max_length=20)),
                ('inspector', models.CharField(blank=True, max_length=100, null=True)),
                ('mileage', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('duration', models.CharField(max_length=20)),
                ('findings', models.JSONField(default=list)),
                ('next_inspection', models.DateTimeField()),
                ('comments', models.TextField(blank=True, null=True)),
                ('attachments', models.JSONField(default=list)),
                ('organization', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vehicles.location')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vehicles.inspectionstatus')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vehicles.inspectiontype')),
                ('vehicle_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='vehicles.vehicletype')),
            ],
            options={
                'db_table': 'inspections',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['reg_number'], name='inspections_reg_num_1939ce_idx')],
            },
        ),
    ]
